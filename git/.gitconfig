[user]
	name = Andrea Vallotti
	email = andrea.vallotti@gmail.com

[alias]
    l1 = log --pretty=oneline -n 20 --graph
    l = log --pretty=format:'%C(yellow)%h%Creset%C(auto)%d%Creset %s %Cgreen[%cn]%Creset' --decorate --graph
    ll = log --pretty=format:'%C(yellow)%h%Creset%C(auto)%d%Creset %s %Cgreen[%cn]%Creset' --decorate --numstat
    ld = log --pretty=format:'%C(yellow)%h%Creset %C(bold blue)%ad%Creset%C(auto)%d%Creset %s %C(green)[%cn]%Creset' --decorate  --date=format-local:'%Y-%m-%d %T' --graph
    fl = log -u
	# View just merge conflicts
	sc = diff --name-only --diff-filter=U
    s = status -s
    tags = tag -l
    bs = branch -a
    rs = remote -v
    bl = blame
    cm = commit -m
    ca = !git add -A && git commit -avm
    cam = commit --amend
    can = commit --amend --no-edit
    ad = add -A
    ap = add -p
    bd = branch -D
    rd = push origin --delete
    co = checkout
    cob = checkout -b
    pl = pull --prune
    pr = pull --rebase --prune
    ps = push
    d = diff
	# Diff on the same line, ignore whitespaces, remove file prefix
	dd = diff --word-diff --no-prefix -w
	# Diff side-by-side thanks to delta
	ds = -c delta.side-by-side=true diff
    undo = reset HEAD~1 --mixed
    throw = reset HEAD~1 --hard
    cc = clean -dfx
    tree = !git log --graph --decorate --all --oneline --color
    alias = config --get-regexp alias
    cpk = cherry-pick
	# unstage staged files (or pass a filename)
	unstage = reset HEAD --
	# global git config
	ec = config --global -e		# edit
	lc = config --global -l		# list
	stashm = stash push -u -m

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# git-delta setup
	pager = delta

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = cyan bold reverse
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[diff]
	# Detect copies as well as renames
	renames = copies
	# git-delta setup
	colorMoved = default

[diff "bin"]
	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	# git-delta setup
	conflictstyle = diff3

[push]
	default = simple
	
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

[rerere]
	enabled = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[interactive]
	# git-delta setup
    diffFilter = delta --color-only

[delta]
    navigate = true
	#side-by-side = true

[icdiff]
	options = --highlight --line-numbers

[pull]
	ff = only
